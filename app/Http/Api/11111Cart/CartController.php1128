<?php
namespace App\Http\Api\Cart;
use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Tools\CartNumber as CartNumber;

class CartController extends Controller{
	/**
     * 加入购物车操作      /cart/cart
     * 前端传递必须参数：	类型type:cart,alone
     *前端传递非必须参数：user_token(用户token)
     * 回调结果：200  数据拉取成功
     *
     *回调数据：  商品列表信息
     */
    public function cart(Request $request){
        $user_info 		= $request->get('user_info');//接收中间件产生的参数
		$group_info		=$request->get('group_info');
		$group_code		= $group_info->group_code??config('page.platform.group_code');

		$address_id		=$request->input('address_id');			//接受一个地址ID过来
		$all_coupon_id	=$request->input('all_coupon_id');		//接受一个全场优惠券ID过来
        $type			=$request->input('type')??'cart';
        $now_time		=date('Y-m-d H:i:s',time());

        //$input=Input::all();

            /**	以下为拿取商品信息的开始位置	*/
            switch ($type){
                case 'cart':
                    //拉取商品数据
					if($group_code == config('page.platform.group_code')){
						$where=[
							['c.total_user_id','=',$user_info->total_user_id],
							['c.use_flag','=','Y'],
							['c.delete_flag','=','Y'],
							['a.delete_flag','=','Y'],
							['a.good_status','=','Y'],
							['a.sell_start_time','<',$now_time],
							['a.sell_end_time','>',$now_time],
							['b.sell_start_time','<',$now_time],
							['b.sell_end_time','>',$now_time],
							['b.delete_flag','=','Y'],
							['b.good_status','=','Y'],
                            ['d.delete_flag','=','Y'],
						];
					}else{
						$where=[
							['c.group_code','=',$group_code],
							['c.total_user_id','=',$user_info->total_user_id],
							['c.use_flag','=','Y'],
							['c.delete_flag','=','Y'],
							['a.delete_flag','=','Y'],
							['a.good_status','=','Y'],
							['a.sell_start_time','<',$now_time],
							['a.sell_end_time','>',$now_time],
							['b.sell_start_time','<',$now_time],
							['b.sell_end_time','>',$now_time],
							['b.delete_flag','=','Y'],
							['b.good_status','=','Y'],
                            ['d.delete_flag','=','Y'],
						];
						
					}
                    

                    $good_infos=DB::table('erp_shop_goods as a')
                        ->join('erp_shop_goods_sku as b',function($join){
                            $join->on('a.self_id','=','b.good_id');
                        }, null,null,'left')
                        ->join('user_cart as c',function($join){
                            $join->on('b.self_id','=','c.sku_id');
                        }, null,null,'left')
                        ->join('system_group as d',function($join){
                            $join->on('d.group_code','=','a.group_code');
                        }, null,null,'left')
                        ->where($where)
                        ->select(
                            'c.self_id as cart_id',
                            'c.good_id',
                            'c.sku_id',
                            'c.good_number',
                            'c.checked_state',
                            'a.good_title',
                            'a.group_code',
                            'a.thum_image_url',
                            'b.sale_price',
                            'b.integral_scale',
                            'a.label_info'
                        )
                        ->orderBy('c.create_time','desc')
                        ->get()->toArray();

                    break;
                case 'alone':
                    $sku_id=$request->input('sku_id');
                    $number=$request->input('number');

                    /** 虚拟数据
                    $sku_id=$input['sku_id']='sku_20200818132343347632732';
                    $number=$input['number']='30';*/

                    //拉取商品数据
                    $where=[
                        ['a.delete_flag','=','Y'],
                        ['a.good_status','=','Y'],
                        ['a.sell_start_time','<',$now_time],
                        ['a.sell_end_time','>',$now_time],
                        ['b.self_id','=',$sku_id],
                        ['b.sell_start_time','<',$now_time],
                        ['b.sell_end_time','>',$now_time],
                        ['b.delete_flag','=','Y'],
                        ['b.good_status','=','Y'],
                        ['d.delete_flag','=','Y'],
                    ];

                    $good_infos=DB::table('erp_shop_goods as a')
                        ->join('erp_shop_goods_sku as b',function($join){
                            $join->on('a.self_id','=','b.good_id');
                        }, null,null,'left')
                        ->join('system_group as d',function($join){
                            $join->on('d.group_code','=','a.group_code');
                        }, null,null,'left')
                        ->where($where)
                        ->select(
                            'a.self_id as good_id',
                            'a.good_title',
                            'a.group_code',
                            'a.thum_image_url',
                            'b.self_id as sku_id',
                            'b.sale_price',
                            'b.integral_scale',
                            'a.label_info'
                        )
                        ->get()->toArray();
                    if($good_infos){
						$good_infos[0]->cart_id='1';
                        $good_infos[0]->good_number=$number;
                        $good_infos[0]->checked_state='Y';
					}
                    break;
            }
            /**	以上为拿取商品信息的结束位置1	*/
//dd($good_infos);

            if($good_infos){
                //开始初始化数据
                $pay['goods_total_money']='0';						//商品总金额
                $pay['discounts_single_total']='0';                 //单品券优惠总计
                $pay['discounts_all_total']='0';                    //全场券优惠总计
                $pay['discounts_activity_total']='0';               //活动优惠总计
                $pay['discounts_total_money']='0';                  //总计优惠
                $pay['serve_total_money']='0';                      //服务总费用
                $pay['kehu_yinfu']='0';
                $pay['good_count']='0';                         	//商品总数量
//dump($pay);
                //如果有商品则处理一下数据
                foreach ($good_infos as $k => $v) {
                    $v->thum_image_url=img_for($v->thum_image_url,'more');

                    $v->label_show='N';

                    $v->sale_price_show=number_format($v->sale_price/100,2);			//价格显示的地方
                    $v->total_price=$v->sale_price*$v->good_number;									//商品总价

                    $v->can_checked='Y';

					//这个地方以后可以判断库存，如果库存为0，则这个东西就不能被选中，要改can_checked  和  checked_state
                    /**if($v->sku_id =='sku_202001151718442128937481'){
                        $v->can_checked='N';
						$v->checked_state='N';
                    }else{
                        
                    }
					*/
					
					if($v->checked_state=='Y'){
						//开始初始化数据
						$pay['goods_total_money'] += $v->sale_price*$v->good_number;				//商品总金额
						$v->checked_state='true';
						$pay['good_count'] +=$v->good_number;
						
					}else{
						$v->checked_state='false';
					}
					
					

                    //做一个优惠计算的标记，默认为N，还没有计算过，如果计算过了，给个Y，不再发起其他的计算
                    $v->can_count_discount='N';

                    
                }

                //dd($good_infos);

                /**	开始做计算位置	*/
                $pay['kehu_yinfu']=$pay['goods_total_money'];

				//dump($pay);
                //抓取活动和优惠券
                $user_activity=null;            //假设活动是空

                $where_coupon=[
                    ['total_user_id','=',$user_info->total_user_id],
                    ['coupon_status','=','unused'],
                    ['time_start','<',$now_time],
                    ['time_end','>',$now_time],
                    ['delete_flag','=','Y'],
                    ['use_flag','=','Y'],
                ];
                $user_coupon=DB::table('user_coupon')->where($where_coupon)
                        ->select('self_id as user_coupon_id',
                            'coupon_title',
                            'range_type',
                            'range_condition',
                            'range',
                            'use_type',
                            'use_self_lifting_flag',
                            'use_type_id',
                            'group_code',
							'time_start',
							'time_end'
                            )
                ->get()->toArray();

                //dump($pay);

				//dump($user_coupo1n);

                $msg_info=calculate($group_code,$good_infos,$user_activity,$user_coupon,$pay,$all_coupon_id);
				//dd($msg_info);
                $pay_info=$msg_info['pay'];
                foreach ($pay_info as $k => $v){
                    $pay_info['goods_total_money_show']=number_format($pay_info['goods_total_money']/100,2);
                    $pay_info['serve_total_money_show']=number_format($pay_info['serve_total_money']/100,2);
                    $pay_info['discounts_total_money_show']=number_format($pay_info['discounts_total_money']/100,2);
                    $pay_info['kehu_yinfu_show']=number_format($pay_info['kehu_yinfu']/100,2);

                }
                /**	计算结束位置	*/
				
				/*做一个地址出来一下开始111  11*/
				$address_info=null;
				$address_id=$request->get('address_id');
				if($address_id){
					if($address_id=='001'){
						//自提信息
						$address_info['address_id']='001';
						$address_info['name']='自提';
						$address_info=(object)$address_info;
						
					}else{
						$where_address=[
							['self_id','=',$address_id],
							['delete_flag','=','Y'],
						];
						$address_info=DB::table('user_address')->where($where_address)
								->select('self_id as address_id',
									'name',
									'tel',
									'address'
									) ->first();
					
						
					}
				}else{
					$where_address_default=[
							['total_user_id','=',$user_info->total_user_id],
							['default_flag','=','Y'],
							['delete_flag','=','Y'],
						];
					
					$address_info=DB::table('user_address')->where($where_address_default)
							->select('self_id as address_id',
								'name',
								'tel',
								'address'
								) ->first();
					
				}
	
				
				
				/*做一个地址出来一结束  */
                $msg['code']=200;
                $msg['msg']='数据计算成功';
                $msg['address_info']=$address_info;
				$msg['good_infos']=$msg_info['good_infos'];
                $msg['pay_info']=$pay_info;
                $msg['user_all_coupon_can']=$msg_info['user_all_coupon_can'];
				$msg['user_all_coupon_canno']=$msg_info['user_all_coupon_canno'];
				$msg['change_price_show']='N';

			//dd($msg);
            }else{
                $msg['code']=301;
                $msg['msg']='没有商品！';

			}


        //dd($msg);

        return $msg;
    }
	
	
    /**
     * 加入购物车操作      /cart/add_cart
     * 前端传递必须参数：
     *前端传递非必须参数：user_token(用户token)
     * 回调结果：200  数据拉取成功
     *
     *回调数据：  商品列表信息
     */
    public function add_cart(Request $request,CartNumber $cartNumber){
        $group_info		=$request->get('group_info');
        $user_info		=$request->get('user_info');
        $now_time       =date('Y-m-d H:i:s',time());

		$good_id		=$request->input('good_id');
		$sku_id			=$request->input('sku_id');
		$number			=$request->input('number');

		$group_code=$group_info->group_code??config('page.platform.group_code');
		//$user_id='user_202004021006499587468765';
		/** 虚拟数据
		$user_id='user_202001192116520483548783';
		$good_id='12212';
		$sku_id='12212';
        $number='2';
		*/

		$datt['total_user_id']	=$user_info->total_user_id;
		$datt['good_id']		=$good_id;
		$datt['sku_id']			=$sku_id;
		$datt['delete_flag']	="Y";
		$datt['use_flag']		="Y";
		$datt['group_code']		=$group_code;



		$cart_info=DB::table('user_cart')->where($datt)->first();

		if($cart_info){
			$where['self_id']=$cart_info->self_id;

			//如果购物车有这个商品
			$datt['good_number']=$cart_info->good_number + $number;
			$datt['update_time']=$now_time;

			DB::table('user_cart')->where($where)->update($datt);
			$msg['code']=200;

			$msg['cart_number']	= $cartNumber->cart_number($user_info,$group_code);
			$msg['msg']="加入购物车成功";
            return $msg;

		}else{
            //去抓取平台方的公司进来
            $group_where['group_code']=$group_code;
            $group_name=DB::table('system_group')->where($group_where)->value('group_name');
            $datt['group_name']=$group_name;

			$datt['self_id']=generate_id('cart_');
			$datt['good_number']=$number;
			$datt['create_time']=$datt['update_time']=$now_time;
			DB::table('user_cart')->insert($datt);

            $msg['cart_number']	= $cartNumber->cart_number($user_info,$group_code);


			$msg['code']=200;
			$msg['msg']="加入购物车成功";
            return $msg;

		}
			


		//dd($msg);


    }

    /**
     * 购物车中修改数量     /cart/change_cart_number
     * 前端传递必须参数：
     *前端传递非必须参数：user_token(用户token)   address_id
     * 回调结果：200  数据拉取成功
     *
     *回调数据：
     */
    public function change_cart_number(Request $request,CartNumber $cartNumber){
        $group_info		=$request->get('group_info');
        $user_info		=$request->get('user_info');
        $group_code		=$group_info->group_code??config('page.platform.group_code');
        $now_time		=date('Y-m-d H:i:s',time());

		$cart_id		=$request->input('cart_id');
		$number			=$request->input('number');

		
		/** 虚拟数据*/
		//$user_id='user_202001192116520483548783';
		//$cart_id='cart_202003201807160565700665';
        //$number='2';

		//如果过来的是0，则将这个商品删除掉
		if($number>0){
			$datt['good_number']=$number;
			$datt['update_time']=$now_time;

		}else{
			$datt['good_number']=0;
			$datt['update_time']=$datt['delete_time']=$now_time;
			$datt['delete_flag']="N";
			$datt['delete_cause']="initiative";
		}

		$where['self_id']=$cart_id;
		DB::table('user_cart')->where($where)->update($datt);

		$msg['code']=200;
		$msg['msg']='购物车数量修改成功！';
		$msg['data']=$number;

        $msg['cart_number']	= $cartNumber->cart_number($user_info,$group_code);


		//dd($msg);
        return $msg;
    }

    /**
     * 购物车中是否选中的修改     /cart/change_cart_check
     * 前端传递必须参数：    type(单独alone，数组array)
     *前端传递非必须参数：user_token(用户token)   address_id
     * 回调结果：200  数据拉取成功
     *
     *回调数据：
     */
    public function change_cart_check(Request $request){
        $user_info		=$request->get('user_info');
        $group_info		=$request->get('group_info');
        $group_code		=$group_info->group_code??config('page.platform.group_code');
        //$user_id='user_202001192116520483548783';

		$cart_id		=$request->input('cart_id');
		$cart_ids		=$request->input('cart_ids');
		//dd($request->all());
		$checked		=$request->input('checked');
		$type			=$request->input('type')??'alone';
		/** 虚拟数据*/
		//$type='array';

		//$cart_id='cart_202004021754207751419381';
		//$checked='N';
		//$cart_ids=[
		   // 'cart_202004141352313041684378',
		   // 'cart_202004141352377562109221',
		//];

		$data['checked_state']=$checked;
		$data['update_time']=date('Y-m-d H:i:s',time());
		switch ($type){
			case 'alone':
					$cart_where['self_id']=$cart_id;
					$id=DB::table('user_cart')->where($cart_where)->update($data);
				break;

			case 'array':
			//print_r($data);
			//print_r($cart_ids);
				$id=DB::table('user_cart')->whereIn('self_id',$cart_ids)->update($data);
				break;

		}

		if($id){
			$msg['code']=200;
			$msg['msg']='购物车数选中状态修改成功！';
			$msg['data']=$checked;
			
		}else{
			$msg['code']=301;
			$msg['msg']='购物车数选中状态修改失败！';
		}


        //dd($msg);
        return $msg;

    }

}
?>
